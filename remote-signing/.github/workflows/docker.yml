name: Build and Push Docker Images

on:
  push:
    branches: [main]
    tags: ['v*']
  pull_request:
    branches: [main]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: harlequin-remote-signing

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.23'

      - name: Run tests
        run: go test -v ./...

      - name: Build binaries for all platforms
        run: make build-all

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Container Registry
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ github.repository }}/${{ env.IMAGE_NAME }}
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}
            type=sha

      - name: Build and push Docker image (amd64)
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile.binary
          platforms: linux/amd64
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}-amd64
          labels: ${{ steps.meta.outputs.labels }}
          build-args: |
            BINARY_PATH=./remote-signing-linux-amd64
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Build and push Docker image (arm64)
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile.binary
          platforms: linux/arm64
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}-arm64
          labels: ${{ steps.meta.outputs.labels }}
          build-args: |
            BINARY_PATH=./remote-signing-linux-arm64
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Create and push multi-arch manifest
        if: github.event_name != 'pull_request'
        run: |
          # Create multi-arch manifest
          for tag in $(echo '${{ steps.meta.outputs.tags }}' | tr '\n' ' '); do
            docker buildx imagetools create \
              --tag $tag \
              $tag-amd64 \
              $tag-arm64
          done

      - name: Upload binaries as artifacts
        uses: actions/upload-artifact@v3
        with:
          name: binaries
          path: |
            remote-signing-*
          retention-days: 30
