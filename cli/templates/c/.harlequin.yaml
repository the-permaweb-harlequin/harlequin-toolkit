# Harlequin Configuration for C AO Process
# This configuration file defines build settings for your C-based AO process

# Build target configuration
target: 'ao'

# Memory configuration (in bytes)
initial_memory: 16777216 # 16MB
maximum_memory: 67108864 # 64MB
stack_size: 8388608 # 8MB

# Build settings
build:
  # Entry point for the process
  entrypoint: 'main.c'

  # Output directory for build artifacts
  output_dir: './dist'

  # Build system
  system: 'cmake'

  # Include additional C files
  includes:
    - 'src/*.c'
    - 'lib/*.c'

  # Compiler settings
  compiler:
    # Use Emscripten for WebAssembly compilation
    toolchain: 'emscripten'

    # Optimization level
    optimization: 'O3'

    # Additional compiler flags
    flags:
      - '-Wall'
      - '-Wextra'
      - '-std=c11'

    # Emscripten-specific settings
    emscripten:
      # Exported functions
      exported_functions:
        - '_handle_message'
        - '_init_process'
        - '_main'

      # Runtime methods
      exported_runtime_methods:
        - 'ccall'
        - 'cwrap'
        - 'UTF8ToString'
        - 'stringToUTF8'

      # Module settings
      modularize: true
      export_name: 'AOProcess'
      environment: ['web', 'worker']

      # Memory settings
      allow_memory_growth: true
      no_exit_runtime: true

  # Debug information
  debug: false

# AO specific settings
ao:
  # Process configuration
  process:
    # Tags to apply to the process
    tags:
      - name: 'App-Name'
        value: '{{PROJECT_NAME}}'
      - name: 'App-Version'
        value: '1.0.0'
      - name: 'Language'
        value: 'C'

  # Module settings
  module:
    # Use latest AO module
    version: 'latest'

# Development settings
dev:
  # Watch for file changes during development
  watch: true

  # Auto-reload on changes
  hot_reload: true

  # Test configuration
  test:
    # Test files pattern
    pattern: 'test/*.c'

    # Test framework
    framework: 'custom'

    # Test command
    command: 'make test'

# Docker settings for containerized builds
docker:
  # Use Emscripten Docker image
  image: 'emscripten/emsdk:latest'

  # Working directory in container
  workdir: '/src'

  # Volume mounts
  volumes:
    - '.:/src'

  # Build command in container
  command: 'emcc main.c -o dist/{{PROJECT_NAME}}.wasm -O3 -s WASM=1 -s EXPORTED_FUNCTIONS=''["_handle_message","_init_process","_main"]'' -s EXPORTED_RUNTIME_METHODS=''["ccall","cwrap","UTF8ToString","stringToUTF8"]'' -s ALLOW_MEMORY_GROWTH=1 -s INITIAL_MEMORY=16777216 -s MAXIMUM_MEMORY=67108864 -s STACK_SIZE=8388608 -s MODULARIZE=1 -s EXPORT_NAME=''AOProcess'' -s ENVIRONMENT=''web,worker'' -s NO_EXIT_RUNTIME=1'
