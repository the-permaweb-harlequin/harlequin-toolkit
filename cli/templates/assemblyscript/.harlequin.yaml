# Harlequin Configuration for AssemblyScript AO Process
# This configuration file defines build settings for your AssemblyScript-based AO process

# Build target configuration
target: 'ao'

# Memory configuration (in bytes)
initial_memory: 16777216 # 16MB
maximum_memory: 67108864 # 64MB
stack_size: 8388608 # 8MB

# Build settings
build:
  # Entry point for the process
  entrypoint: 'assembly/index.ts'

  # Build system
  system: 'assemblyscript'

  # Output directory for build artifacts
  output_dir: './build'

  # AssemblyScript-specific settings
  assemblyscript:
    # Target configuration
    target: 'release'

    # Compiler options
    compiler:
      # Optimization level (0-3)
      optimizeLevel: 3

      # Shrink level (0-2)
      shrinkLevel: 2

      # Enable convergence
      converge: true

      # Disable assertions in release
      noAssert: true

      # Runtime variant
      runtime: 'stub'

      # Export runtime functions
      exportRuntime: true

      # Bindings format
      bindings: 'esm'

    # Additional compiler flags
    flags:
      - '--enable bulk-memory'
      - '--enable mutable-globals'
      - '--enable nontrapping-float-to-int'
      - '--enable sign-extension'

    # Transform options
    transform:
      # Enable JSON transform
      json: true

      # Enable portable transform
      portable: true

  # Include additional TypeScript files
  includes:
    - 'assembly/**/*.ts'
    - 'tests/**/*.js'

  # Optimization settings
  optimize: true

  # Debug information
  debug: false

# AO specific settings
ao:
  # Process configuration
  process:
    # Tags to apply to the process
    tags:
      - name: 'App-Name'
        value: '{{PROJECT_NAME}}'
      - name: 'App-Version'
        value: '1.0.0'
      - name: 'Language'
        value: 'AssemblyScript'

  # Module settings
  module:
    # Use latest AO module
    version: 'latest'

# Development settings
dev:
  # Watch for file changes during development
  watch: true

  # Auto-reload on changes
  hot_reload: true

  # Test configuration
  test:
    # Test files pattern
    pattern: 'tests/**/*.js'

    # Test framework
    framework: 'node'

    # Test command
    command: 'npm test'

# WebAssembly settings
wasm:
  # Optimization settings
  optimize: true

  # Size optimization
  optimize_size: true

  # Strip debug information
  strip: true

  # Additional wasm-opt flags
  wasm_opt_flags:
    - '-Os'
    - '--enable-bulk-memory'
    - '--enable-mutable-globals'
    - '--enable-nontrapping-float-to-int'
    - '--enable-sign-extension'

# Docker settings for containerized builds
docker:
  # Use Node.js Docker image with AssemblyScript
  image: 'node:18'

  # Working directory in container
  workdir: '/usr/src/app'

  # Volume mounts
  volumes:
    - '.:/usr/src/app'

  # Setup commands
  setup:
    - 'npm install -g assemblyscript'
    - 'npm install'

  # Build command in container
  command: 'npm run build'
