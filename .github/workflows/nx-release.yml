name: Nx Release

on:
  push:
    branches: [main, develop]
    paths:
      - 'cli/**'
      - '.github/workflows/nx-release.yml'
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to release (optional)'
        required: false
        type: string
      dry_run:
        description: 'Dry run (no actual release)'
        required: false
        type: boolean
        default: false

env:
  NX_CLOUD_DISTRIBUTED_EXECUTION: false

jobs:
  release:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.21.x'

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          cache: 'yarn'

      - name: Install dependencies
        run: yarn

      - name: Setup GoReleaser
        uses: goreleaser/goreleaser-action@v5
        with:
          distribution: goreleaser
          version: latest
          install-only: true

      - name: Validate GoReleaser config
        run: npx nx goreleaser-check cli

      - name: Release (Main - Stable)
        if: github.ref == 'refs/heads/main' && !inputs.dry_run
        run: |
          if [ -n "${{ inputs.version }}" ]; then
            npx nx release --version=${{ inputs.version }} --yes
          else
            npx nx release --yes
          fi
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          ARWEAVE_WALLET_JWK: ${{ secrets.ARWEAVE_WALLET_JWK }}

      - name: Release (Develop - Alpha)
        if: github.ref == 'refs/heads/develop' && !inputs.dry_run
        run: |
          if [ -n "${{ inputs.version }}" ]; then
            npx nx release --version=${{ inputs.version }}-alpha --yes
          else
            npx nx release --preid=alpha --yes
          fi
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          ARWEAVE_WALLET_JWK: ${{ secrets.ARWEAVE_WALLET_JWK }}

      - name: Dry Run
        if: inputs.dry_run
        run: |
          echo "ðŸ§ª Dry run mode - showing what would be released"
          if [ "${{ github.ref }}" == "refs/heads/main" ]; then
            npx nx release --dry-run
          else
            npx nx release --preid=alpha --dry-run
          fi

      - name: Test installation script
        if: !inputs.dry_run
        run: |
          echo "Testing installation script..."
          curl -fsSL https://install_cli_harlequin.daemongate.io | DRYRUN=true sh
